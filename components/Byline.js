// Generated by CoffeeScript 1.10.0
var React, _joinFn,
  slice = [].slice;

React = require('react');

_joinFn = function(names, options) {
  var _and, _join, _last, n;
  if (options == null) {
    options = {};
  }
  if (typeof names === 'string') {
    return names;
  }
  if ((names == null) || names.length === 0) {
    return '';
  }
  if (names.name) {
    names = [names.name];
  } else if (names[0].name != null) {
    names = (function() {
      var i, len, results;
      results = [];
      for (i = 0, len = names.length; i < len; i++) {
        n = names[i];
        results.push(n.name);
      }
      return results;
    })();
  } else {
    names = slice.call(names);
  }
  _join = options.join || ', ';
  _and = options.and || '&';
  if (names.length > 1) {
    _last = names[names.length - 1];
    names[names.length - 1] = _and + " " + _last;
  }
  if (names.length > 2) {
    names = names.join(_join);
  } else {
    names = names.join(' ');
  }
  return names;
};

module.exports = React.createClass({
  displayName: 'Byline',
  proptTypes: {
    byline: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.arrayOf(React.PropTypes.string)]).isRequired,
    label: React.PropTypes.string,
    join: React.PropTypes.string,
    and: React.PropTypes.string
  },
  getDefaultProps: function() {
    return {
      label: 'By ',
      join: ', ',
      and: '&'
    };
  },
  render: function() {
    var label, names;
    label = this.props.label;
    names = _joinFn(this.props.byline, {
      and: this.props.and,
      join: this.props.join
    });
    if (!names) {
      label = null;
    }
    return React.createElement("div", {
      "className": 'Byline'
    }, React.createElement("span", {
      "className": '_Label'
    }, label), React.createElement("span", {
      "className": '_Names'
    }, names));
  }
});

module.exports.join = _joinFn;
