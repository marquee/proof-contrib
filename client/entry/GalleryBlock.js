// Generated by CoffeeScript 1.10.0
var CLOSE_ICON, GalleryBlock, LEFT_ICON, Lightbox, RIGHT_ICON, preloadImage, renderImageEl,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

preloadImage = function(url, cb) {
  var img;
  img = document.createElement('img');
  img.onload = function() {
    return cb();
  };
  return img.src = url;
};

CLOSE_ICON = "<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 65 65\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <g class='_Icon' stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <polygon points=\"64.7094727 59.4873047 59.4873047 64.7094727 32.3320312 37.5541992 5.17675781 64.7094727 0 59.4873047 27.1552734 32.3320312 0 5.17675781 5.17675781 0 32.3320312 27.1552734 59.4873047 0 64.7094727 5.17675781 37.5541992 32.3320312\"></polygon>\n    </g>\n</svg>";

LEFT_ICON = "<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 42 71\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <g class='_Icon' stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <polygon transform=\"translate(20.767434, 35.307617) rotate(-90.000000) translate(-20.767434, -35.307617) \" points=\"-14.5401833 49.818005 20.7376384 14.5401833 56.0750511 49.818005 49.818005 56.0750511 20.7376384 26.9946845 -8.2831372 56.0750511\"></polygon>\n    </g>\n</svg>";

RIGHT_ICON = "<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 42 71\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <g class='_Icon' stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <polygon transform=\"translate(20.767434, 35.307617) rotate(-270.000000) translate(-20.767434, -35.307617) \" points=\"-14.5401833 49.818005 20.7376384 14.5401833 56.0750511 49.818005 49.818005 56.0750511 20.7376384 26.9946845 -8.2831372 56.0750511\"></polygon>\n    </g>\n</svg>";

renderImageEl = function(image) {
  var el, image_el;
  el = document.createElement('button');
  el.className = '_GridThumbnail';
  el.style.backgroundColor = 'transparent';
  el.style.border = '0';
  el.style.cursor = 'pointer';
  el.style.display = 'inline-block';
  el.style.overflow = 'hidden';
  el.style.padding = '0';
  el.style.verticalAlign = 'top';
  image_el = document.createElement('div');
  image_el.className = '_GridThumbnailImage';
  image_el.style.backgroundImage = "url('" + image.urls['128'] + "')";
  image_el.style.backgroundPosition = 'center center';
  image_el.style.backgroundRepeat = 'no-repeat';
  image_el.style.backgroundSize = 'cover';
  image_el.style.filter = 'blur(1px)';
  image_el.style.height = '100%';
  image_el.style.transitionDuration = '0.1s';
  image_el.style.transitionProperty = '"filter"';
  image_el.style.width = '100%';
  preloadImage(image.urls['640'], function() {
    image_el.style.backgroundImage = "url('" + image.urls['640'] + "')";
    return image_el.style.filter = 'blur(0)';
  });
  el.appendChild(image_el);
  return el;
};

Lightbox = (function() {
  var BOX_GUTTER, IMAGE_SPACING;

  IMAGE_SPACING = 10;

  BOX_GUTTER = 20;

  function Lightbox(images, inline) {
    if (inline == null) {
      inline = false;
    }
    this._navigateOnKeypress = bind(this._navigateOnKeypress, this);
    this._previousImage = bind(this._previousImage, this);
    this._nextImage = bind(this._nextImage, this);
    this._hideOnEscape = bind(this._hideOnEscape, this);
    this._inline = inline;
    this._images = images;
    this.el = document.createElement('div');
    this.el.className = 'GalleryLightbox';
    this.el.style.height = '100vh';
    this.el.style.left = '0';
    this.el.style.position = inline ? 'relative' : 'fixed';
    this.el.style.top = '0';
    this.el.style.width = '100vw';
    this.el.style.overflow = 'hidden';
    this.el.style.transitionProperty = 'opacity';
    this.el.style.transitionDuration = '0.2s';
    this.el.style.backgroundColor = "rgba(0,0,0,0.8)";
    this._buildBox();
    this._buildControls();
    this._current_image_id = 0;
    if (!this._inline) {
      this.el.style.opacity = '0';
      this.el.style.display = 'none';
      this.el.addEventListener('click', (function(_this) {
        return function(e) {
          return _this.hide();
        };
      })(this));
      document.body.appendChild(this.el);
    } else {
      window.requestAnimationFrame((function(_this) {
        return function() {
          return _this.show(0);
        };
      })(this));
    }
  }

  Lightbox.prototype._buildControls = function() {
    this._previous_button = document.createElement('button');
    this._previous_button.className = '_ControlButton -previous';
    this._previous_button.addEventListener('click', (function(_this) {
      return function(e) {
        e.stopPropagation();
        return _this._previousImage();
      };
    })(this));
    this._previous_button.setAttribute('aria-label', 'Previous Image');
    this._previous_button.innerHTML = LEFT_ICON;
    this._previous_button.style.left = '1px';
    this._previous_button.style.position = 'absolute';
    this._previous_button.style.top = '49vh';
    this.el.appendChild(this._previous_button);
    this._next_button = document.createElement('button');
    this._next_button.className = '_ControlButton -next';
    this._next_button.addEventListener('click', (function(_this) {
      return function(e) {
        e.stopPropagation();
        return _this._nextImage();
      };
    })(this));
    this._next_button.setAttribute('aria-label', 'Next Image');
    this._next_button.innerHTML = RIGHT_ICON;
    this._next_button.style.position = 'absolute';
    this._next_button.style.right = '1px';
    this._next_button.style.top = '49vh';
    this.el.appendChild(this._next_button);
    if (!this._inline) {
      this._close_button = document.createElement('button');
      this._close_button.className = '_ControlButton -previous';
      this._close_button.addEventListener('click', (function(_this) {
        return function(e) {
          e.stopPropagation();
          return _this.hide();
        };
      })(this));
      this._close_button.setAttribute('aria-label', 'Close Gallery');
      this._close_button.innerHTML = CLOSE_ICON;
      this._close_button.style.position = 'absolute';
      this._close_button.style.top = '1px';
      this._close_button.style.right = '1px';
      return this.el.appendChild(this._close_button);
    }
  };

  Lightbox.prototype._buildBox = function() {
    var first_width, row_width;
    this._display_row = document.createElement('div');
    this._display_row.className = '_LightboxRow';
    this._display_row.style.height = '100%';
    this._display_row.style.transitionProperty = 'transform';
    this._display_row.style.transitionDuration = '0.5s';
    row_width = 0;
    first_width = null;
    this._images.forEach((function(_this) {
      return function(image, i) {
        var _caption, _credit, _height, _width, caption_el, image_el, selected_size;
        image_el = document.createElement('div');
        _height = window.innerHeight - BOX_GUTTER * 2;
        _width = Math.floor(image.aspect_ratio * _height);
        if (_width > window.innerWidth - BOX_GUTTER * 2) {
          _width = window.innerWidth - BOX_GUTTER * 2;
          _height = Math.floor(_width / image.aspect_ratio);
        }
        row_width += _width + IMAGE_SPACING;
        if (first_width == null) {
          first_width = _width;
        }
        image_el.className = '_LightboxImage';
        image_el.style.backgroundImage = "url('" + image.urls['128'] + "')";
        image_el.style.backgroundSize = 'cover';
        image_el.style.height = _height + "px";
        image_el.style.width = _width + "px";
        image_el.style.display = 'inline-block';
        image_el.style.verticalAlign = 'middle';
        image_el.style.transitionDuration = '0.1s';
        image_el.style.transitionProperty = '"filter, transform"';
        image_el.style.filter = 'blur(3px) grayscale(1)';
        image_el.style.marginRight = IMAGE_SPACING + "px";
        image_el.style.position = 'relative';
        if (image.caption || image.credit) {
          caption_el = document.createElement('div');
          caption_el.className = '_LightboxImageCaption';
          caption_el.style.position = 'absolute';
          caption_el.style.bottom = '0';
          caption_el.style.left = '0';
          caption_el.style.right = '0';
          caption_el.style.opacity = '0';
          caption_el.style.transitionDuration = '0.5s';
          caption_el.style.transitionProperty = '"opacity"';
          _caption = document.createElement('p');
          _caption.className = '_Caption';
          _caption.textContent = image.caption;
          caption_el.appendChild(_caption);
          _credit = document.createElement('p');
          _credit.className = '_Credit';
          _credit.textContent = image.credit;
          caption_el.appendChild(_credit);
          image_el.appendChild(caption_el);
          image_el.caption_el = caption_el;
        }
        image_el._is_loaded = false;
        selected_size = '2560';
        preloadImage(image.urls[selected_size], function() {
          image_el._is_loaded = true;
          image_el.style.backgroundImage = "url('" + image.urls[selected_size] + "')";
          if (image_el._is_current) {
            return image_el.style.filter = 'blur(0) grayscale(0)';
          }
        });
        _this._display_row.appendChild(image_el);
        image.lightbox_el = image_el;
        return image_el.addEventListener('click', function(e) {
          _this._setCurrentImage(i);
          return e.stopPropagation();
        });
      };
    })(this));
    this._display_row.style.width = row_width + "px";
    this._display_row.style.marginTop = IMAGE_SPACING + "px";
    return this.el.appendChild(this._display_row);
  };

  Lightbox.prototype.show = function(id) {
    if (!this._inline) {
      document.body.setAttribute('data-lock_scroll', 'true');
      window.addEventListener('keyup', this._hideOnEscape);
      window.addEventListener('keydown', this._navigateOnKeypress);
    }
    return window.requestAnimationFrame((function(_this) {
      return function() {
        _this.is_showing = true;
        window.setTimeout(function() {
          return _this._setCurrentImage(id);
        }, 40);
        _this.el.style.display = 'block';
        return _this.el.style.opacity = '1';
      };
    })(this));
  };

  Lightbox.prototype._setCurrentImage = function(id) {
    var offset_width;
    offset_width = 0;
    this._current_image_id = id;
    this._images.forEach(function(image, i) {
      var _blur, ref, ref1;
      image.lightbox_el._is_current = i === id;
      if (image.lightbox_el._is_current) {
        offset_width += Math.floor(image.lightbox_el.offsetWidth / 2);
        _blur = image.lightbox_el._is_loaded ? '0' : '3px';
        image.lightbox_el.style.filter = "blur(" + _blur + ") grayscale(0)";
        image.lightbox_el.style.transform = 'scale(1)';
        image.lightbox_el.style.cursor = 'default';
        return (ref = image.lightbox_el.caption_el) != null ? ref.style.opacity = '1' : void 0;
      } else {
        if (i < id) {
          offset_width += image.lightbox_el.offsetWidth + IMAGE_SPACING;
        }
        image.lightbox_el.style.filter = 'blur(3px) grayscale(1)';
        image.lightbox_el.style.transform = 'scale(0.9)';
        image.lightbox_el.style.cursor = 'pointer';
        return (ref1 = image.lightbox_el.caption_el) != null ? ref1.style.opacity = '0' : void 0;
      }
    });
    this._next_button.disabled = this._current_image_id === this._images.length - 1;
    this._previous_button.disabled = this._current_image_id === 0;
    return this._display_row.style.transform = "translateX(" + (window.innerWidth / 2 - offset_width) + "px)";
  };

  Lightbox.prototype._hideOnEscape = function(e) {
    if (27 === e.which) {
      return this.hide();
    }
  };

  Lightbox.prototype.hide = function() {
    if (!this._inline) {
      this.el.style.display = 'none';
      this.el.style.opacity = '0';
      this.is_showing = false;
      document.body.setAttribute('data-lock_scroll', 'false');
      window.removeEventListener('keyup', this._hideOnEscape);
      return window.removeEventListener('keydown', this._navigateOnKeypress);
    }
  };

  Lightbox.prototype._nextImage = function() {
    if (this._current_image_id < this._images.length - 1) {
      return this._setCurrentImage(this._current_image_id + 1);
    }
  };

  Lightbox.prototype._previousImage = function() {
    if (this._current_image_id > 0) {
      return this._setCurrentImage(this._current_image_id - 1);
    }
  };

  Lightbox.prototype._navigateOnKeypress = function(e) {
    switch (e.which) {
      case 39:
        return this._nextImage();
      case 37:
        return this._previousImage();
    }
  };

  return Lightbox;

})();

GalleryBlock = (function() {
  function GalleryBlock(el, options) {
    this._showLightbox = bind(this._showLightbox, this);
    var e, error, pending_frame;
    this._options = options;
    this.el = el;
    try {
      this._images = JSON.parse(el.dataset.images);
    } catch (error) {
      e = error;
      console.error(e);
      return;
    }
    this._images.filter(function(img) {
      return (img.aspect_ratio != null) && img.aspect_ratio;
    }).forEach((function(_this) {
      return function(image, i) {
        image.id = i;
        return image.width = Math.floor(image.aspect_ratio * _this._options.grid_row_height);
      };
    })(this));
    if (el.dataset.inline === 'true') {
      this.el.appendChild((new Lightbox(this._images, true)).el);
      return;
    }
    this._buildGrid();
    this._renderSizes(this._content_el.offsetWidth);
    pending_frame = false;
    window.addEventListener('resize', (function(_this) {
      return function() {
        var new_width;
        new_width = _this._content_el.offsetWidth;
        if (!pending_frame) {
          pending_frame = true;
          return window.requestAnimationFrame(function() {
            _this._renderSizes(new_width);
            return pending_frame = false;
          });
        }
      };
    })(this));
  }

  GalleryBlock.prototype._buildGrid = function() {
    this._content_el = document.createElement('div');
    this._content_el.className = '_Content';
    this._images.forEach((function(_this) {
      return function(image) {
        image.el = renderImageEl(image);
        _this._content_el.appendChild(image.el);
        return image.el.addEventListener('click', function() {
          return _this._showLightbox(image.id);
        });
      };
    })(this));
    return this.el.appendChild(this._content_el);
  };

  GalleryBlock.prototype._showLightbox = function(id) {
    if (this._lightbox == null) {
      this._lightbox = new Lightbox(this._images);
    }
    return this._lightbox.show(id);
  };

  GalleryBlock.prototype._renderSizes = function(target_width) {
    var MAX_STRETCH, _height_px, current_row, rows;
    MAX_STRETCH = 50;
    rows = [];
    current_row = [];
    current_row.width = 0;
    this._images.forEach((function(_this) {
      return function(image, i) {
        if (current_row.width + image.width + MAX_STRETCH < target_width) {
          current_row.push(image);
          current_row.width += image.width;
        }
        if (i === _this._images.length - 1 || current_row.width + _this._images[i + 1].width + MAX_STRETCH >= target_width) {
          rows.push(current_row);
          current_row = [];
          return current_row.width = 0;
        }
      };
    })(this));
    _height_px = this._options.grid_row_height + "px";
    return rows.forEach((function(_this) {
      return function(row, i) {
        var delta, per_image_adjustment, rendered_width;
        delta = target_width - row.width;
        rendered_width = 0;
        per_image_adjustment = Math.floor(delta / row.length);
        if (i === rows.length - 1 && per_image_adjustment > MAX_STRETCH) {
          per_image_adjustment = 0;
        }
        return row.forEach(function(image, j) {
          var rounding_fix;
          rendered_width += image.width + per_image_adjustment;
          if (j === 0) {
            image.el.style.marginLeft = _this._options.grid_padding + "px";
          } else {
            image.el.style.marginLeft = (_this._options.grid_padding / 2) + "px";
          }
          if (j === row.length - 1) {
            image.el.style.marginRight = _this._options.grid_padding + "px";
          } else {
            image.el.style.marginRight = (_this._options.grid_padding / 2) + "px";
          }
          if (j === row.length - 1 && rendered_width < target_width) {
            rounding_fix = target_width - rendered_width;
            if (rounding_fix + per_image_adjustment > MAX_STRETCH) {
              rounding_fix = 0;
            }
          } else {
            rounding_fix = 0;
          }
          image.el.style.height = _height_px;
          image.el.style.width = (image.width + per_image_adjustment + rounding_fix - _this._options.grid_padding * (row.length + 1) / row.length) + "px";
          image.el.dataset.row = i;
          image.el.dataset.col = j;
          return image.el.style.marginBottom = _this._options.grid_padding + "px";
        });
      };
    })(this));
  };

  GalleryBlock.activate = function(options) {
    var _options, el, k, l, len, ref, results, v;
    _options = {
      grid_row_height: 200,
      grid_padding: 8
    };
    for (k in options) {
      v = options[k];
      _options[k] = v;
    }
    ref = document.querySelectorAll('.GalleryBlock[data-images]');
    results = [];
    for (l = 0, len = ref.length; l < len; l++) {
      el = ref[l];
      results.push(new GalleryBlock(el, _options));
    }
    return results;
  };

  return GalleryBlock;

})();

module.exports = GalleryBlock;

require('../client_modules').register('GalleryBlock', module.exports);
